server:
  port: 8081

spring:
  application:
    name: library

  # Configurazione database
  datasource:
    url: jdbc:postgresql://localhost:5433/library_db
    username: library_admin_user
    password: library_admin_password
    driver-class-name: org.postgresql.Driver

  data:
    jpa:
      repositories:
        # DEFAULT: i repositories vengono controllati all'avvio dell'applicazione
        # DEFERRED: i repositories vengono controllati all'avvio dell'applicazione ma in maniera asincrona
        # LAZY: i repositories vengono controllati solo quando sono richiamati
        bootstrap-mode: DEFAULT

  # JPA
  jpa:
    hibernate:
      # Values:
      # none : non viene apportata alcuna modifica al database. Valore DA METTERE in produzione
      # update: crea le tabelle ed i relativi campi sul database qualora lÃ¬ non esistano.
      # Altresi modifica le tabelle esistenti aggiungendo solo i campi nuovi ma non modificando quelli preesistenti.
      # create-drop: crea le tabelle all'avvio dell'applicazione e ne fa il drop quando stoppo l'applicazione
      # validated: confronta le classi (entitÃ ) con le tabelle; se trova discrepanze solleva una eccezione.
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    open-in-view: false


logging:
  level:
    '[com.nico.library]': info
    '[org.hibernate.orm]': debug
    '[org.hibernate.type.descriptor.sql.BasicBinder]': trace
    '[org.springframework.boot]': info
    #'[org.springframework.security]': DEBUG

spring-doc:
  swagger-ui:
    enabled: true
    # hostname:port/swagger-ui.html => localhost:8081/swagger-ui.html
    path: /swagger-ui.html

# CUSTOM PROPERTIES
application:
  security:
    jwt:
      tokenType: Bearer
      secret-key: WS27AFX7HWB8OEWUK6RW5F5C51MWDH57C2I6NDGZCBJ2306QBZISUL3KYAF9RM67
      expiration: 86400000 # milliseconds -> 1 day